datasource db {
  // could be postgresql or mysql
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

model AnnualCo2Emissions {
  time                         DateTime    @id @default(now())
  Population                   Population? @relation(fields: [populationGrowthThisYear], references: [populationGrowthThisYear])
  populationGrowthThisYear     BigInt?     @unique
  currentCo2Emissions          Float
  currentCo2EmissionsPredicted Float
  annualCo2EmissionsPredicted  Float
}

model TotalCo2Emissions {
  time                                DateTime    @id @default(now())
  Population                          Population? @relation(fields: [population], references: [population])
  population                          BigInt?     @unique
  totalCo2EmissionsPredicted          Float
  endOfYearTotalCo2EmissionsPredicted Float
}

model Population {
  time                               DateTime            @default(now())
  population                         BigInt              @id
  populationGrowthThisYear           BigInt              @unique
  populationPredicted                BigInt
  populationGrowthThisYearPredicted  BigInt
  endOfYearPopulationPredicted       BigInt
  endOfYearPopulationGrowthPredicted BigInt
  TotalCo2Emissions                  TotalCo2Emissions?
  AnnualCo2Emissions                 AnnualCo2Emissions?
}

model PredictorStats {
  time                         DateTime @id @default(now())
  populationPrecision          Float    @default(0)
  populationGrowthPrecision    Float    @default(0)
  totalCo2EmissionsPrecision   Float    @default(0)
  annualCo2EmissionsPrecision  Float    @default(0)
  totalFossilEnergyAccuracy    Float    @default(0)
  totalRenewableEnergyAccuracy Float    @default(0)
}

model PopulationBy {
  time                              DateTime @id @default(now())
  year                              Int
  populationPredicted               BigInt
  populationGrowthPredicted         BigInt
  populationGrowthCalculated        BigInt
  populationGrowthPredictedFromNow  BigInt
  populationGrowthCalculatedFromNow BigInt
  populationGrowthPercent           Float
  calculatedPopulationGrowthPercent Float
}

model Co2EmissionsBy {
  time                        DateTime @id @default(now())
  year                        Int
  totalCo2EmissionsPredicted  Float
  annualCo2EmissionsPredicted Float    @default(0)
  tempAnomalyPredicted        Float
}

model EnergyProductionBy {
  time                          DateTime @id @default(now())
  year                          Int
  totalFossilFuelProduction     Float
  totalRenewableProduction      Float
  hydropowerProduction          Float
  windPowerProduction           Float
  solarPowerProduction          Float
  otherRenewablePowerProduction Float
}
